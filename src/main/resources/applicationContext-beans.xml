<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

    <bean id="beanPostProcessor" class="com.ioc.spring.beans.MyBeanPostProcessor">
    </bean>

    <bean id="instantiationAwareBeanPostProcessor" class="com.ioc.spring.beans.MyInstantiationAwareBeanPostProcessor">
    </bean>

    <bean id="beanFactoryPostProcessor" class="com.ioc.spring.beans.MyBeanFactoryPostProcessor">
    </bean>

    <bean id="person" class="com.ioc.spring.beans.Person" init-method="myInit"
          destroy-method="myDestory" scope="singleton" p:name="张三" p:address="广州"
          p:phone="1590000000" />

    <!--kafka 生产者的配置-->
    <bean id="producerFactory" class = "org.springframework.kafka.core.DefaultKafkaProducerFactory">
        <constructor-arg name="configs">
            <map>
                <entry key = "bootstrap.servers" value="localhost:9092"></entry>
                <entry key = "zk.connect" value="127.0.0.1:2181"></entry>
                <entry key = "key.serializer" value="org.apache.kafka.common.serialization.StringSerializer"></entry>
                <entry key = "value.serializer" value="org.apache.kafka.common.serialization.StringSerializer"></entry>
                <entry key = "key.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer"></entry>
                <entry key = "value.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer"></entry>
            </map>
        </constructor-arg>
    </bean>
    <bean id = "kafkaTemplate" class="org.springframework.kafka.core.KafkaTemplate">
        <constructor-arg ref = "producerFactory"></constructor-arg>
        <constructor-arg name = "autoFlush" value="true"></constructor-arg>
    </bean>

    <bean id = "consumerFacory" class = "org.springframework.kafka.core.DefaultKafkaConsumerFactory">
        <constructor-arg name = "configs">
            <map>
                <entry key = "bootstrap.servers" value="localhost:9092"></entry>
                <entry key = "group.id" value="testGroup2"></entry>
           <!--     <entry key = "enable.auto.commit" value="true"></entry>-->
                <entry key = "key.serializer" value="org.apache.kafka.common.serialization.StringSerializer"></entry>
                <entry key = "value.serializer" value="org.apache.kafka.common.serialization.StringSerializer"></entry>
                <entry key = "key.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer"></entry>
                <entry key = "value.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer"></entry>
            </map>
        </constructor-arg>
    </bean>

    <bean id = "consumerListener" class = "com.lsj.springboot.kafka.spring.KafkaConsumerListener"></bean>
    <bean id = "containerPropertis" class = "org.springframework.kafka.listener.ContainerProperties">
        <constructor-arg value="kafka-topic"></constructor-arg>
        <property name="messageListener" ref = "consumerListener"></property>
    </bean>
    <bean id = "messageListenerContainer" class="org.springframework.kafka.listener.KafkaMessageListenerContainer">
        <constructor-arg ref = "consumerFacory"></constructor-arg>
        <constructor-arg ref = "containerPropertis"></constructor-arg>
    </bean>

</beans>