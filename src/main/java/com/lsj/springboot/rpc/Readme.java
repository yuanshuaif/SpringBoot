package com.lsj.springboot.rpc;

public class Readme {
   /* RPC框架称为远程调用框架，其实现的核心原理就是消费者端使用动态代理来代理一个接口的方法(基于JDK的动态代理，
    当然如果使用CGLib可以直接使用无接口类的方法)，通过加入网络传输编程，传输调用接口方法名称，方法参数来给提供者获取，
    再通过反射，来执行该接口的方法，再将反射执行的结果通过网络编程传回消费者端。
    现在我们来依次实现这些概念。这里我们做最简单的实现，网络编程使用的是BIO，大家可以使用Reactor模式的Netty来改写性能更好的方式。
    而网络传输中使用的序列化和反序列化也是Java自带的，当然这样的传输字节比较大，可以使用google的protoBuffer或者kryo来处理。
    这里只为了方便说明原理。*/
}
